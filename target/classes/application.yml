spring:
  application:
    name: dostiship-backend
    
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/dostiship
    username: ${DB_USERNAME:dostiship_user}
    password: ${DB_PASSWORD:dostiship_password}
    driver-class-name: org.postgresql.Driver
    
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        
  # WebSocket Configuration
  websocket:
    allowed-origins: "*"
    
  # Mail Configuration (for contact form notifications)
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /
    
# Application Specific Configuration
app:
  jwt:
    secret: ${JWT_SECRET:dostishipSecretKeyForJWTTokenGenerationThatShouldBeAtLeast256BitsLongForSecurity}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
    
# Logging Configuration
logging:
  level:
    com.dostiship: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    
# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: alpha
    tags-sorter: alpha
  info:
    title: Dostiship API
    description: Complete Spring Boot backend for Dostiship social platform
    version: 1.0.0
    contact:
      name: Dostiship Team
      email: contact@dostiship.com

# Management endpoints for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized